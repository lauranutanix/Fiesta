{"version":3,"sources":["img/stores.png","img/products.png","img/inventory.png","containers/AddNewStore/index.js","containers/AddNewProduct/index.js","containers/AddProductToStore/index.js","containers/UpdateInventoryProduct/index.js","containers/ViewStoreDetails/index.js","containers/AddNewInventory/index.js","components/Nav/index.js","components/Dashboard/index.js","components/Stores/index.js","components/Products/index.js","components/Inventory/index.js","components/Footer/index.js","App.js","index.js"],"names":["module","exports","AddNewStore","props","handleSubmit","event","a","async","preventDefault","storeName","state","store_name","storeCity","store_city","storeState","store_state","swal","axios","post","headers","then","response","console","log","status","value","window","location","href","data","handleInputChange","bind","handleSelectChange","e","target","name","this","setState","prevState","className","encType","type","id","onChange","required","onClick","to","Component","AddProductToStore","product_name","product_price","product_qty","product_img_url","product_comment","isValidFloat","product_image_url","store_id","match","params","num","test","AddNewStoreProduct","product_id","quantity","local_price","comment","all_products","current_inventory","get","catch","inventory","filter","line","parseInt","map","entry","products","list_of_products_not_in_store","prod","includes","push","get_prods_not_in_store","select_products","product","key","UpdateInventoryProduct","inventory_id","put","product_quantity","ViewStore","getProducts","products_res","length","isStoreEmpty","store_products","toggleState","handleDelete","delete","updatedProducts","comments","toFixed","storeDetailsForm","Nav","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Dashboard","alt","src","storeimg","prodimg","inventoryimg","Stores","stores","store","handleDeleteStore","Products","crossOrigin","handleDeleteProduct","Inventory","search_input","toLowerCase","filter_inventory","filterInventory","htmlFor","autoComplete","placeholder","speech","viewBox","d","fill","uuid","Footer","App","title","text","icon","buttons","dangerMode","willDelete","exact","path","component","render","ViewStoreDetails","AddNewProduct","AddNewInventory","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c377922b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/stores.2e5d8723.png\";","module.exports = __webpack_public_path__ + \"static/media/products.c4a93327.png\";","module.exports = __webpack_public_path__ + \"static/media/inventory.9044b10c.png\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport './style.css';\n\nclass AddNewStore extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store_name: '',\n            store_city: '',\n            store_state: ''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n    }\n\n    handleInputChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n\n        }), () => console.log(this.state))\n    }\n\n    handleSelectChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n\n        }), () => console.log(this.state))\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let storeName = this.state.store_name;\n        let storeCity = this.state.store_city;\n        let storeState = this.state.store_state;\n\n        if (storeName === '') {\n            swal(\"Oops!\", \"Store Name is a required field.\", \"error\");\n        } else if (storeCity === '') {\n            swal(\"Oops!\", \"Store City is a required field.\", \"error\");\n        } else if (storeState === '') {\n            swal(\"Oops!\", \"Store State is a required field.\", \"error\");\n        }\n\n        if (storeName !== '' && storeCity !== '' && storeState !== '') {\n            // handle the submission of the form data to the database\n            axios.post('/api/stores', { store_name: storeName, store_city: storeCity, store_state: storeState }, { headers: { 'Accept': 'application/json' } })\n                .then(response => {\n                    console.log(response)\n                    if (response.status === 200) {\n                        swal(\"Success!\", \"A new store has been added!\", \"info\")\n                            .then((value) => {\n                                window.location.href = \"/stores\"\n                            })\n                    }\n                    if (response.data.status === false || response.data.status === '500') {\n                        swal(\"Oops!\", \"Something went wrong adding this store.\", \"error\");\n                    }\n                });\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <form className=\"container-fluid\" encType=\"multipart/form-data\">\n                    <h1 className=\"header\">Add a Store</h1>\n                    <div className=\"add_row\">\n                        <label>Store Name: </label>\n                        <input\n                            type=\"text\"\n                            id=\"store_name\"\n                            className=\"form-control\"\n                            name={\"store_name\"}\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.store_name}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Store City:</label>\n                        <input\n                            type=\"text\"\n                            id=\"store_city\"\n                            className=\"form-control\"\n                            name={\"store_city\"}\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.store_city}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Store State:</label>\n                        <select\n                            onChange={(e) => this.handleSelectChange(e)}\n                            name=\"store_state\"\n                            className=\"form-control\"\n                            id={this.state.store_state}>\n                            <option value=\"\">-- Select --</option>\n                            <option value=\"AL\">Alabama</option>\n                            <option value=\"AK\">Alaska</option>\n                            <option value=\"AZ\">Arizona</option>\n                            <option value=\"AR\">Arkansas</option>\n                            <option value=\"CA\">California</option>\n                            <option value=\"CO\">Colorado</option>\n                            <option value=\"CT\">Connecticut</option>\n                            <option value=\"DE\">Delaware</option>\n                            <option value=\"DC\">District Of Columbia</option>\n                            <option value=\"FL\">Florida</option>\n                            <option value=\"GA\">Georgia</option>\n                            <option value=\"HI\">Hawaii</option>\n                            <option value=\"ID\">Idaho</option>\n                            <option value=\"IL\">Illinois</option>\n                            <option value=\"IN\">Indiana</option>\n                            <option value=\"IA\">Iowa</option>\n                            <option value=\"KS\">Kansas</option>\n                            <option value=\"KY\">Kentucky</option>\n                            <option value=\"LA\">Louisiana</option>\n                            <option value=\"ME\">Maine</option>\n                            <option value=\"MD\">Maryland</option>\n                            <option value=\"MA\">Massachusetts</option>\n                            <option value=\"MI\">Michigan</option>\n                            <option value=\"MN\">Minnesota</option>\n                            <option value=\"MS\">Mississippi</option>\n                            <option value=\"MO\">Missouri</option>\n                            <option value=\"MT\">Montana</option>\n                            <option value=\"NE\">Nebraska</option>\n                            <option value=\"NV\">Nevada</option>\n                            <option value=\"NH\">New Hampshire</option>\n                            <option value=\"NJ\">New Jersey</option>\n                            <option value=\"NM\">New Mexico</option>\n                            <option value=\"NY\">New York</option>\n                            <option value=\"NC\">North Carolina</option>\n                            <option value=\"ND\">North Dakota</option>\n                            <option value=\"OH\">Ohio</option>\n                            <option value=\"OK\">Oklahoma</option>\n                            <option value=\"OR\">Oregon</option>\n                            <option value=\"PA\">Pennsylvania</option>\n                            <option value=\"RI\">Rhode Island</option>\n                            <option value=\"SC\">South Carolina</option>\n                            <option value=\"SD\">South Dakota</option>\n                            <option value=\"TN\">Tennessee</option>\n                            <option value=\"TX\">Texas</option>\n                            <option value=\"UT\">Utah</option>\n                            <option value=\"VT\">Vermont</option>\n                            <option value=\"VA\">Virginia</option>\n                            <option value=\"WA\">Washington</option>\n                            <option value=\"WV\">West Virginia</option>\n                            <option value=\"WI\">Wisconsin</option>\n                            <option value=\"WY\">Wyoming</option>\n                        </select>\n                    </div>\n                    <div className=\"add_store_action_btn_block\">\n                        <button onClick={this.handleSubmit} className=\"btn btn-outline-primary action_btn\">Submit</button>\n                        <Link to={`/stores`}><button className=\"btn btn-outline-danger action_btn\">Cancel</button></Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddNewStore;\n\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport './style.css';\n\nclass AddProductToStore extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store_name: '',\n            store_id: '',\n            product_name: '',\n            product_price: '',\n            product_qty: 100,\n            product_img_url: '',\n            product_comment: ''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.isValidFloat = this.isValidFloat.bind(this);\n    }\n\n    componentDidMount() {\n        const { store_name } = this.props.match.params;\n        const { store_id } = this.props.match.params;\n        this.setState({ store_name: store_name, store_id: store_id })\n    }\n\n    handleInputChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n\n        }), () => console.log(this.state))\n    }\n\n    handleSelectChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n\n        }), () => console.log(this.state))\n    }\n\n    isValidFloat(num) {\n        let regex = /^\\d*\\.?\\d*$/;\n        if (regex.test(num)) {\n            return true;\n        }\n        return false;\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let product_name = this.state.product_name;\n        let product_price = this.state.product_price;\n        let product_qty = this.state.product_qty;\n        let product_img_url = this.state.product_img_url;\n        let product_comment = this.state.product_comment;\n\n        let product_insert_response = '';\n\n        if (product_name === '') {\n            swal(\"Oops!\", \"Product Name is a required field.\", \"error\");\n        } else if (product_price === '') {\n            swal(\"Oops!\", \"Product Price is a required field.\", \"error\");\n        } else if (this.isValidFloat(product_price) === false) {\n            swal(\"Oops!\", \"Enter a Valid Product Price. Example: 0.00\", \"error\");\n        } else if (product_qty === '') {\n            swal(\"Oops!\", \"Product Qty is a required field.\", \"error\");\n        } else if (product_img_url === '') {\n            swal(\"Oops!\", \"Product Image URL is a required field.\", \"error\");\n        }\n\n        if (product_name !== '' && product_price !== '' && this.isValidFloat(product_price) === true && product_qty !== '') {\n            try {\n                 // add the new product to the products table\n                product_insert_response = await axios.post(`/api/products`, { product_name: product_name, product_price: product_price, product_image_url: product_img_url, product_comment: product_comment }, { headers: { 'Accept': 'application/json' } });\n                if (product_insert_response.status === 200) {\n                    swal(\"Success!\", \"A new product has been added!\", \"info\")\n                    .then((value) => {\n                        window.location.href = \"/products\"\n                    })\n                }\n            } catch (e) {\n                console.log(e);\n                swal(\"Oops!\", \"Something went wrong adding this product.\", \"error\"); // adding product to inventory depends on a successful product creation first\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <form className=\"container-fluid\" encType=\"multipart/form-data\">\n                    <h2 className=\"header\">Add New Product to Global Inventory</h2>\n      \n                    <div className=\"add_row\">\n                        <label>Product Name  (*): </label>\n                        <input\n                            name={\"product_name\"}\n                            type=\"text\"\n                            id=\"product_name\"\n                            className=\"form-control\"\n\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_name}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Suggested Retail Price  (*):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_price\"\n                            className=\"form-control\"\n                            name={\"product_price\"}\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_price}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Product Image URL (optional):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_img_url\"\n                            className=\"form-control\"\n                            name=\"product_img_url\"\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_img_url}\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Product Comments (optional):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_comment\"\n                            className=\"form-control\"\n                            name=\"product_comment\"\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_comment}\n                        />\n                    </div>\n                    <div className=\"add_store_action_btn_block\">\n                        <button onClick={this.handleSubmit} className=\"btn btn-outline-primary action_btn\">Submit</button>\n                        <Link to={`/products`}><button className=\"btn btn-outline-danger action_btn\">Cancel</button></Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddProductToStore;\n\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport './style.css';\n\nclass AddNewStoreProduct extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            all_products: [],\n            current_inventory: [],\n            store_name: '',\n            store_id: '',\n            product_id: '',\n            product_name: '',\n            product_price: '',\n            product_qty: 100,\n            product_comment: ''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.isValidFloat = this.isValidFloat.bind(this);\n    }\n\n    componentDidMount() {\n        const { store_name } = this.props.match.params;\n        const { store_id } = this.props.match.params;\n        this.setState({ store_name: store_name, store_id: store_id })\n\n        axios.get('/api/products')\n            .then(response => {\n                this.setState({ all_products: response.data });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n\n        axios.get('/api/inventory')\n            .then(response => {\n                this.setState({ current_inventory: response.data });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    handleInputChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n\n        }), () => console.log(this.state))\n    }\n\n    handleSelectChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n\n        }), () => console.log(this.state))\n    }\n\n    isValidFloat(num) {\n        let regex = /^\\d*\\.?\\d*$/;\n        if (regex.test(num)) {\n            return true;\n        }\n        return false;\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let store_id = this.state.store_id;\n        let product_id = this.state.product_id;\n        let store_name = this.state.store_name;\n        let product_price = this.state.product_price;\n        let product_qty = this.state.product_qty;\n        let product_img_url = this.state.product_img_url;\n        let product_comment = this.state.product_comment;\n\n        let inventory_insert_response = '';\n\n        if (product_id === '') {\n            swal(\"Oops!\", \"Product Name is a required field.\", \"error\");\n        } else if (product_price === '') {\n            swal(\"Oops!\", \"Product Price is a required field.\", \"error\");\n        } else if (this.isValidFloat(product_price) === false) {\n            swal(\"Oops!\", \"Enter a Valid Product Price. Example: 0.00\", \"error\");\n        } else if (product_qty === '') {\n            swal(\"Oops!\", \"Product Qty is a required field.\", \"error\");\n        } else if (product_img_url === '') {\n            swal(\"Oops!\", \"Product Image URL is a required field.\", \"error\");\n        }\n\n        if (product_id !== '' && product_price !== '' && this.isValidFloat(product_price) === true && product_qty !== '') {\n            try {\n                // add the new product to the inventory table and associate it to the store\n                inventory_insert_response = await axios.post(`/api/inventory`, { product_id: product_id, store_id: store_id, quantity: product_qty, local_price: product_price, comment: product_comment }, { headers: { 'Accept': 'application/json' } });\n\n                if (inventory_insert_response.status === 200) {\n                    swal(\"Success!\", `A new product has been added to store ${store_name}!`, \"info\")\n                        .then((value) => {\n                            window.location.href = `/stores/products/${store_id}`\n                        })\n                }\n            } catch (e) {\n                console.log(e);\n                swal(\"Oops!\", \"Something went wrong adding this product to inventory.\", \"error\");\n            }\n        }\n    }\n\n    get_prods_not_in_store() {\n        // this function makes a list of product ids that are not part of the current store in question\n        let inventory = this.state.current_inventory\n        .filter(line => parseInt(line.store_id) === parseInt(this.state.store_id)) // return list of all prods belonging to this store_id\n        .map(entry => entry.product_id); // return list of list with all revelant prod ids\n\n        let products = this.state.all_products.map(entry => entry.id);\n        \n        let list_of_products_not_in_store = [];\n\n        // for every product id, look for that (product id [associated to] store id) and if associacion exist, don't add to final list\n        for (let prod in products) {\n            if (!inventory.includes(products[prod])){\n                list_of_products_not_in_store.push(products[prod]);\n            }\n        }\n        return list_of_products_not_in_store;\n    }\n    render() {\n\n        // make a list of all the product_ids not associated to this store\n        let list_of_products_not_in_store = this.get_prods_not_in_store();\n        \n        // make a dropdown Menu with all of the products available products from the Products DB (BUT NOT YET ASSOCIATED TO THIS STORE)\n        let select_products =\n            this.state.all_products\n            .filter( product => (list_of_products_not_in_store.includes( product.id )))\n            .map ( prod => <option key={prod.id} value={prod.id}>{prod.product_name}</option> );\n        return (\n            <div className=\"wrapper\">\n                <form className=\"container-fluid\" encType=\"multipart/form-data\">\n                    <h2 className=\"header\">Add New Product to Store from Global Inventory</h2>\n                    <h3>Store Name: {this.state.store_name}</h3>\n                    <div className=\"add_row\">\n                        <label>Product Name (*): </label>\n                        <select\n                            onChange={(e) => this.handleSelectChange(e)}\n                            name=\"product_id\"\n                            className=\"form-control\"\n                            id=\"product_id\"\n                            required\n                        >\n                            <option value=\"\">-- Select --</option>\n                            {select_products}\n                        </select>\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Local Product Price (*):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_price\"\n                            className=\"form-control\"\n                            name={\"product_price\"}\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_price}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Initial product qty at this store (*):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_qty\"\n                            className=\"form-control\"\n                            name={\"product_qty\"}\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_qty}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Product comments (optional):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_comment\"\n                            className=\"form-control\"\n                            name=\"product_comment\"\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_comment}\n                        />\n                    </div>\n                    <div className=\"add_store_action_btn_block\">\n                        <button onClick={this.handleSubmit} className=\"btn btn-outline-primary action_btn\">Submit</button>\n                        <Link to={`/stores/products/${this.state.store_id}`}><button className=\"btn btn-outline-danger action_btn\">Cancel</button></Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddNewStoreProduct;\n\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport './style.css';\n\nclass UpdateInventoryProduct extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inventory_id: '',\n            store_id:'',\n            product_name: '',\n            product_price: '',\n            product_qty: '',\n            product_comment: ''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        // this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.isValidFloat = this.isValidFloat.bind(this);\n    }\n\n    componentDidMount() {\n        const { inventory_id } = this.props.match.params;\n        const { store_id } = this.props.match.params;\n        this.setState({ inventory_id: inventory_id, store_id: store_id });\n\n        axios.get(`/api/inventory/${inventory_id}`)\n            .then(response => {\n                console.log(response)\n                this.setState({\n                    product_name: response.data[0].product_name,\n                    product_price: response.data[0].local_price,\n                    product_qty: response.data[0].quantity,\n                    product_comment: response.data[0].comment\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    handleInputChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n        }), () => console.log(this.state))\n    }\n\n    isValidFloat(num) {\n        let regex = /^\\d*\\.?\\d*$/;\n        if (regex.test(num)) {\n            return true;\n        }\n        return false;\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let inventory_id = this.state.inventory_id;\n        let product_name = this.state.product_name;\n        let product_price = this.state.product_price;\n        let product_qty = this.state.product_qty;\n        let product_comment = this.state.product_comment;\n\n        if (product_name === '') {\n            swal(\"Oops!\", \"Product Name is a required field.\", \"error\");\n        } else if (product_price === '') {\n            swal(\"Oops!\", \"Product Price is a required field.\", \"error\");\n        } else if (this.isValidFloat(product_price) === false) {\n            swal(\"Oops!\", \"Enter a Valid Product Price. Example: 0.00\", \"error\");\n        } else if (product_qty === '') {\n            swal(\"Oops!\", \"Product Qty is a required field.\", \"error\");\n        }\n\n        if (product_name !== '' && product_price !== '' && this.isValidFloat(product_price) === true && product_qty !== '') {\n            try {\n                // update the product \n                const product_insert_response = await axios.put(`/api/inventory/${inventory_id}`, { inventory_id:inventory_id, product_name: product_name, local_price: product_price, product_quantity:product_qty, product_comment: product_comment }, { headers: { 'Accept': 'application/json' } });\n                if (product_insert_response.status === 200) {\n                    swal(\"Success!\", \"The product has been updated!\", \"info\")\n                    .then((value) => {\n                        window.location.href = `/stores/products/${this.state.store_id}`\n                    })\n                }\n            } catch (e) {\n                console.log(e);\n                swal(\"Oops!\", \"Something went wrong adding this product.\", \"error\"); // adding product to inventory depends on a successful product creation first\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <form className=\"container-fluid\" encType=\"multipart/form-data\">\n                    <h2 className=\"header\">Update Product</h2>\n                    <h3>Product Name: {this.state.product_name}</h3>\n                    <div className=\"add_row\">\n                        <label>Product Price  (*):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_price\"\n                            className=\"form-control\"\n                            name={\"product_price\"}\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_price || '0.00'}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Product Qty (*):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_qty\"\n                            className=\"form-control\"\n                            name={\"product_qty\"}\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_qty || ''}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Product Comments (optional):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_comment\"\n                            className=\"form-control\"\n                            name=\"product_comment\"\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_comment || ''}\n                        />\n                    </div>\n                    <div className=\"add_store_action_btn_block\">\n                        <button onClick={this.handleSubmit} className=\"btn btn-outline-primary action_btn\">Submit</button>\n                        <Link to={`/stores/products/${this.state.store_id}`}><button className=\"btn btn-outline-danger action_btn\">Cancel</button></Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default UpdateInventoryProduct;\n\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport './style.css';\n\nclass ViewStore extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            store_name: '',\n            store_products: [],\n            store_id: '',\n            quantity: '',\n            local_price: '',\n            comments: '',\n            isStoreEmpty: true\n        }\n        this.getProducts = this.getProducts.bind(this);\n        this.handleDelete = this.handleDelete.bind(this);\n    }\n\n    async componentDidMount() {\n        // this.getComments();\n        this.getProducts();\n    }\n\n    getProducts = async () => {\n        const { store_id } = this.props.match.params;\n        try {\n            // get all the products of this store\n            const products_res = await axios.get(`/api/stores/products/${store_id}`);\n            if (products_res.data.length > 0) {\n                this.setState({ isStoreEmpty: false, store_products: products_res.data });\n            }\n        } catch (e) {\n            console.log(e);\n        }\n\n        try {\n            // get the store info for a particular store\n            const products_res = await axios.get(`/api/stores/${store_id}`);\n            if (products_res.data.length > 0) {\n                this.setState({ store_id: store_id, store_name: products_res.data[0].store_name });\n            }\n        } catch (e) {\n            console.log(e);\n        }\n    }\n\n    toggleState = () => {\n        let toggleObj = this.state.store_products.map(inventory => (inventory.id:false ))\n    }\n\n    handleDelete = (event, id) => {\n        event.preventDefault();\n\n        // handle the deletion of a store's product entry in the DB\n        axios.delete(`/api/inventory/${id}`, { headers: { 'Accept': 'application/json' } })\n            .then(response => {\n                //remove it from store products\n                let updatedProducts = this.state.store_products.filter(prod => prod.inventory_id !== id)\n                this.setState({ store_products: updatedProducts })\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        let inventory =\n            this.state.store_products.map(inventory => (\n                <div className=\"store_row\" key={inventory.inventory_id}>\n                    <div className=\"store_col\">\n                        {inventory.product_name}\n                    </div>\n                    <div className=\"store_col\">\n                        ${inventory.local_price.toFixed(2)}\n                    </div>\n                    <div className=\"store_col\">\n                        {inventory.quantity}\n                    </div>\n                    <div className=\"store_col\">\n                    {inventory.comment} \n                    </div>\n                    <div id=\"action_btn_block\">\n                        <div id=\"add_btn_store\"><Link to={`/inventory/${inventory.inventory_id}/${inventory.store_id}`}><button className=\"btn btn-outline-primary action_btn\">Update</button></Link></div>\n                        <button onClick={(e) => this.handleDelete(e, inventory.inventory_id)} type=\"submit\" className=\"btn btn-outline-danger action_btn\">Delete</button>\n                    </div>\n                </div>\n            ));\n\n        let storeDetailsForm =\n            <form>\n                <div className=\"store_container\">\n                    <div className=\"store_row_header\">\n                        <h3>Name</h3>\n                        <h3>Local Price</h3>\n                        <h3>Local Quantity</h3>\n                        <h3>Comments</h3>\n                        <h3>Actions</h3>\n                    </div>\n                    {inventory}\n                </div>\n            </form>\n\n        return (\n            <div className=\"wrapper\">\n                <h2 className=\"header\">Store Details Page</h2>\n                <h3>Store Name: {this.state.store_name}</h3>\n                <div id=\"add_btn_store\"><Link to={`/products/add/${this.state.store_name}/${this.state.store_id}`}><button className=\"btn btn-outline-primary action_btn_store\">Add New Store Product</button></Link></div>\n                {this.state.isStoreEmpty ? <div>*** This store does not have any products associated. Please <Link to={`/products/add/${this.state.store_name}/${this.state.store_id}`}>add</Link> some merchandise or <Link to={`/stores`}>return</Link> to the stores page. *** </div> : storeDetailsForm}\n            </div>\n        )\n    }\n}\n\nexport default ViewStore;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport swal from 'sweetalert';\nimport axios from 'axios';\nimport './style.css';\n\nclass AddProductToStore extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            store_name: '',\n            store_id: '',\n            product_name: '',\n            product_price: '',\n            product_qty: 100,\n            product_img_url: '',\n            product_comment: ''\n        }\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSelectChange = this.handleSelectChange.bind(this);\n        this.isValidFloat = this.isValidFloat.bind(this);\n    }\n\n    componentDidMount() {\n        const { store_name } = this.props.match.params;\n        const { store_id } = this.props.match.params;\n        this.setState({ store_name: store_name, store_id: store_id })\n    }\n\n    handleInputChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n\n        }), () => console.log(this.state))\n    }\n\n    handleSelectChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value\n\n        }), () => console.log(this.state))\n    }\n\n    isValidFloat(num) {\n        let regex = /^\\d*\\.?\\d*$/;\n        if (regex.test(num)) {\n            return true;\n        }\n        return false;\n    }\n\n    handleSubmit = async event => {\n        event.preventDefault();\n\n        let product_name = this.state.product_name;\n        let product_price = this.state.product_price;\n        let product_qty = this.state.product_qty;\n        let product_img_url = this.state.product_img_url;\n        let product_comment = this.state.product_comment;\n\n        let product_insert_response = '';\n\n        if (product_name === '') {\n            swal(\"Oops!\", \"Product Name is a required field.\", \"error\");\n        } else if (product_price === '') {\n            swal(\"Oops!\", \"Product Price is a required field.\", \"error\");\n        } else if (this.isValidFloat(product_price) === false) {\n            swal(\"Oops!\", \"Enter a Valid Product Price. Example: 0.00\", \"error\");\n        } else if (product_qty === '') {\n            swal(\"Oops!\", \"Product Qty is a required field.\", \"error\");\n        } else if (product_img_url === '') {\n            swal(\"Oops!\", \"Product Image URL is a required field.\", \"error\");\n        }\n\n        if (product_name !== '' && product_price !== '' && this.isValidFloat(product_price) === true && product_qty !== '') {\n            try {\n                 // add the new product to the products table\n                product_insert_response = await axios.post(`/api/products`, { product_name: product_name, product_price: product_price, product_image_url: product_img_url, product_comment: product_comment }, { headers: { 'Accept': 'application/json' } });\n                if (product_insert_response.status === 200) {\n                    swal(\"Success!\", \"A new product has been added!\", \"info\")\n                    .then((value) => {\n                        window.location.href = \"/products\"\n                    })\n                }\n            } catch (e) {\n                console.log(e);\n                swal(\"Oops!\", \"Something went wrong adding this product.\", \"error\"); // adding product to inventory depends on a successful product creation first\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <form className=\"container-fluid\" encType=\"multipart/form-data\">\n                    <h2 className=\"header\">Add New Inventory Entry</h2>\n      \n                    <div className=\"add_row\">\n                        <label>Product Name  (*): </label>\n                        <input\n                            name={\"product_name\"}\n                            type=\"text\"\n                            id=\"product_name\"\n                            className=\"form-control\"\n\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_name}\n                            required\n                        />\n                    </div>\n                    <div className=\"add_row\">\n                        <label>Store Name (*): </label>\n                        <input\n                            name={\"product_name\"}\n                            type=\"text\"\n                            id=\"product_name\"\n                            className=\"form-control\"\n\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_name}\n                            required\n                        />\n                    </div>\n       \n                    <div className=\"add_row\">\n                        <label>Unit Quantity Available:</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_comment\"\n                            className=\"form-control\"\n                            name=\"product_comment\"\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_comment}\n                        />\n                    </div>\n\n                    <div className=\"add_row\">\n                        <label>Comments (optional):</label>\n                        <input\n                            type=\"text\"\n                            id=\"product_comment\"\n                            className=\"form-control\"\n                            name=\"product_comment\"\n                            onChange={(e) => this.handleInputChange(e)}\n                            value={this.state.product_comment}\n                        />\n                    </div>\n                    <div className=\"add_store_action_btn_block\">\n                        <button onClick={this.handleSubmit} className=\"btn btn-outline-primary action_btn\">Submit</button>\n                        <Link to={`/stores/products/${this.state.store_id}`}><button className=\"btn btn-outline-danger action_btn\">Cancel</button></Link>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default AddProductToStore;\n\n\n\n","import React from 'react';\nimport './style.css';\n\nconst Nav = props => {\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <a className=\"navbar-brand\" href=\"#\">Fiesta!</a>\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                <span className=\"navbar-toggler-icon\"></span>\n            </button>\n            <div className=\"collapse navbar-collapse local_nav\" id=\"navbarNavAltMarkup\">\n                <div className=\"navbar-nav\">\n                    <a className=\"nav-item nav-link active\" href=\"/\">Home <span className=\"sr-only\">(current)</span></a>\n                    <a className=\"nav-item nav-link\" href=\"/products\">Products</a>\n                    <a className=\"nav-item nav-link\" href=\"/stores\">Stores</a>\n                    <a className=\"nav-item nav-link\" href=\"/inventory\">Inventory</a>\n                </div>\n            </div>\n        </nav>\n    )\n};\n\nexport default Nav;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport \"./style.css\";\nimport storeimg from './../../img/stores.png';\nimport prodimg from './../../img/products.png';\nimport inventoryimg from './../../img/inventory.png';\n\nclass Dashboard extends Component {\n    render() {\n        return (\n            <div className=\"wrapper\">\n                <div className=\"jumbotron jumbotron-fluid jumbotron_local\">\n                    <div className=\"container\">\n                        <h1 className=\"display-4\">Welcome to Fiesta!</h1>\n                        <p className=\"lead\">An inventory management app for stores that sell party supplies.</p>\n                    </div>\n                </div>\n                <div className=\"options\">\n                    <Link to='/stores'>\n                        <div className=\"card\">\n                            <p>Stores</p>\n                            <img className=\"icon\" alt=\"stores icon\" src={storeimg} />\n                        </div>\n                    </Link>\n                    <Link to='/products'>\n                        <div className=\"card\">\n                            <p>Products</p>\n                            <img className=\"icon\" alt=\"product icon\" src={prodimg} />\n                        </div>\n                    </Link>\n                    <Link to='/inventory'>\n                        <div className=\"card\">\n                            <p>Inventory</p>\n                            <img className=\"icon\" alt=\"inventory icon\" src={inventoryimg} />\n                        </div>\n                    </Link>\n                </div>\n\n            </div>\n        )\n    }\n}\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\nclass Stores extends Component {\n    render() {\n        let stores = this.props.stores.map(store => (\n            <div key={store.id} className=\"stores_row\">\n                <div className=\"stores_col\">{store.store_name}</div>\n                <div className=\"stores_col\">{store.store_city}, {store.store_state}</div>\n                <div className=\"stores_col\" id=\"action_btn_block_stores\">\n                    <Link to={`/stores/products/${store.id}`}><button className=\"btn btn-outline-primary action_btn_stores\">View Store</button></Link>\n                    <button onClick={() => this.props.handleDeleteStore(store.id)} className=\"btn btn-outline-danger action_btn_stores\">Delete Store</button>\n                </div>\n            </div>\n        ));\n\n        return (\n            <div className=\"wrapper\">\n                <h2 className=\"header\">List of Stores</h2>                \n                <div id=\"add_btn_stores\"><Link to={`/stores/add`}><button className=\"btn btn-outline-primary\">Add New Store</button></Link></div>\n                <div className=\"stores_row_header\">\n                    <h3>Name</h3>\n                    <h3>Location</h3>\n                    <h3>Actions</h3>\n                </div>\n                {stores}\n            </div>\n        )\n    }\n}\n\nexport default Stores;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './style.css';\n\nclass Products extends Component {\n    render() {\n        let products =\n            this.props.products.map(product => (\n                <div key={product.id} className=\"prod_row\">\n                    <div className=\"prod_col\">\n                        <img src={product.product_image_url} crossOrigin=\"true\" alt={product.product_name} className=\"product_img prod_col\" />\n                    </div>\n                    <div className=\"prod_col\">{product.product_name}</div>\n                    <div className=\"prod_col\">\n                        ${product.product_price.toFixed(2)}\n                    </div>\n                    <div className=\"prod_col\">{product.product_comment}</div>\n                    <div className=\"prod_col\" id=\"action_btn_block_prod\">\n                        <div id=\"update_product\"><button onClick={() => this.props.handleDeleteProduct(product.id)} className=\"btn btn-outline-danger\">Delete From All Stores</button></div>\n                    </div>\n                </div>\n            ));\n\n        return (\n            <div className=\"wrapper\">\n                <h2 className=\"header\">Global Inventory of Products:</h2>\n                <div id=\"add_btn_stores\"><Link to={`/products/add`}><button className=\"btn btn-outline-primary\">Add New Product</button></Link></div>\n                <div className=\"prod_row_header\">\n                    <h3>Image</h3>\n                    <h3>Name</h3>\n                    <h3>Suggested Retail Price</h3>\n                    <h3>Comment</h3>\n                    <h3>Action</h3>\n                </div>\n                {products}\n            </div>\n        )\n    }\n}\n\nexport default Products;\n\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport uuid from 'react-uuid';\n\nimport './style.css';\nimport './search_style.css';\n\nclass Inventory extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            search_input: '',\n            inventory: this.props.inventory\n        }\n        // this.handleInputChange = this.handleInputChange.bind(this);\n\n    }\n\n    filterInventory() {\n        if (this.state.search_input === '') {\n            let filtered_inventory = this.props.inventory.map(inventory => (\n                <div className=\"inventory_row\" key={inventory.id}>\n                    <div className=\"inventory_col\">\n                        {inventory.product_name}\n                    </div>\n\n                    <div className=\"inventory_col\">\n                        <Link to={`/stores/products/${inventory.store_id}`}>{inventory.store_name}</Link>\n                    </div>\n\n                    <div className=\"inventory_col\">\n                        {inventory.quantity}\n                    </div>\n\n                    <div className=\"inventory_col\">\n                        {inventory.comment}\n                    </div>\n                </div>\n            )\n            )\n            return (filtered_inventory);\n        } else {\n            let filtered_inventory = this.props.inventory\n                .filter(entry => entry.product_name.toLowerCase().includes(this.state.search_input) || entry.store_name.toLowerCase().includes(this.state.search_input))\n                .map(inventory => (\n                    <div className=\"inventory_row\" key={inventory.id}>\n                        <div className=\"inventory_col\">\n                            {inventory.product_name}\n                        </div>\n\n                        <div className=\"inventory_col\">\n                            <Link to={`/stores/products/${inventory.store_id}`}>{inventory.store_name}</Link>\n                        </div>\n\n                        <div className=\"inventory_col\">\n                            {inventory.quantity}\n                        </div>\n\n                        <div className=\"inventory_col\">\n                            {inventory.comment}\n                        </div>\n                    </div>\n                )\n                )\n            return (filtered_inventory);\n        }\n\n    }\n\n    handleInputChange(e) {\n        let value = e.target.value;\n        let name = e.target.name;\n        this.setState(prevState => ({\n            ...prevState, [name]: value.toLowerCase()\n        }))\n    }\n\n    render() {\n        let filter_inventory = this.filterInventory()\n        // this.filterInventory()\n        return (\n            <div className=\"wrapper\">\n                <h2 className=\"header\">Global Inventory of Available Products:</h2>\n                <div id=\"search\">\n                    <label htmlFor=\"search-input\">Search:</label>\n                    <input onChange={(e) => this.handleInputChange(e)} aria-label=\"Search\" autoComplete=\"on\" id=\"search-input\" name=\"search_input\" value={this.state.search_input} placeholder=\"Search\" speech=\"true\" type=\"search\" />\n                    <svg viewBox=\"0 0 24 24\">\n                        <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n                        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                    </svg>\n                </div>\n                {/* <div id=\"add_btn_stores\"><Link to={`/inventory/add`}><button className=\"btn btn-outline-primary\">Add New Inventory Entry</button></Link></div> */}\n                <div className=\"inventory_container\">\n                    <div className=\"inventory_row_header\" key={uuid()}>\n                        <h3 className=\"inventory_col\">Product Name</h3>\n                        <h3 className=\"inventory_col\">Store Name</h3>\n                        <h3 className=\"inventory_col\">Quantity</h3>\n                        <h3 className=\"inventory_col\">Comments</h3>\n                    </div>\n                    {/* {this.state.inventory} */}\n                    {filter_inventory}\n                </div>\n            </div>\n        )\n\n    }\n}\n\nexport default Inventory;","import React from 'react';\nimport './style.css';\n\nconst Footer = props => {\n    return (\n        <footer className=\"footer-content\">\n            <p className=\"copy-right\">© Nutanix 2020</p>\n            <p className=\"copy-right\">Powered by MySQL</p>\n        </footer>\n    )\n};\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport swal from 'sweetalert';\n\n// import containers\nimport AddNewStore from './containers/AddNewStore';\nimport AddNewProduct from './containers/AddNewProduct';\nimport AddProductToStore from './containers/AddProductToStore';\nimport UpdateInventoryProduct from './containers/UpdateInventoryProduct';\nimport ViewStoreDetails from './containers/ViewStoreDetails';\nimport AddNewInventory from './containers/AddNewInventory';\n\n// import Components\nimport Nav from './components/Nav';\nimport Dashboard from './components/Dashboard';\nimport Stores from './components/Stores';\nimport Products from './components/Products';\nimport Inventory from './components/Inventory';\nimport Footer from './components/Footer';\nimport axios from 'axios';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      stores: [],\n      products: [],\n      inventory: []\n    };\n    this.handleDeleteStore = this.handleDeleteStore.bind(this);\n  }\n  componentDidMount() {\n    axios.get('/api/stores')\n      .then(response => {\n        this.setState({ stores: response.data });\n        // console.log(this.state);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n\n    axios.get('/api/products')\n      .then(response => {\n        this.setState({ products: response.data });\n        // console.log(this.state);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n\n    axios.get('/api/inventory')\n      .then(response => {\n        this.setState({ inventory: response.data });\n        // console.log(this.state);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  handleDeleteStore = (id) => {\n\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this store's records!\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n      .then((willDelete) => {\n        if (willDelete) {\n          // handle the deletion of a store entry in the DB\n          axios.delete(`http://localhost:3001/api/stores/${id}`, { headers: { 'Accept': 'application/json' } })\n            .then(response => {\n              // fetch the new list of stores\n              axios.get('/api/stores')\n                .then(response => {\n                  this.setState({ stores: response.data });\n                  swal(\"Success! The store record has been deleted!\", {\n                    icon: \"success\",\n                  });\n                })\n                .catch(e => {\n                  console.log(e);\n                });\n            })\n            .catch(e => {\n              console.log(e);\n            });\n        }\n      });\n  }\n\n  handleDeleteProduct = (id) => {\n    console.log(id)\n    swal({\n      title: \"Are you sure?\",\n      text: \"Once deleted, you will not be able to recover this product's records! but you can always re-create it by adding a new product.\",\n      icon: \"warning\",\n      buttons: true,\n      dangerMode: true,\n    })\n      .then((willDelete) => {\n        if (willDelete) {\n          // handle the deletion of a product across all stores\n          axios.delete(`http://localhost:3001/api/products/${id}`, { headers: { 'Accept': 'application/json' } })\n            .then(response => {\n              // fetch the new list of products\n              axios.get('/api/products')\n                .then(response => {\n                  this.setState({ products: response.data });\n                  swal(\"Success! The product record has been deleted!\", {\n                    icon: \"success\",\n                  });\n                })\n                .catch(e => {\n                  console.log(e);\n                });\n            })\n            .catch(e => {\n              console.log(e);\n            });\n        }\n      });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/stores' render={() => <Stores stores={this.state.stores} handleDeleteStore={this.handleDeleteStore} />} />\n          <Route exact path='/stores/add' component={AddNewStore} />\n          <Route exact path='/stores/products/:store_id' component={ViewStoreDetails} />\n          <Route exact path='/products' render={() => <Products products={this.state.products} handleDeleteProduct={this.handleDeleteProduct} />} />\n          <Route exact path='/products/add' component={AddNewProduct} />\n          <Route exact path='/products/add/:store_name/:store_id' component={AddProductToStore} />\n          <Route exact path='/inventory' render={() => <Inventory inventory={this.state.inventory} />} />\n          <Route exact path='/inventory/add' component={AddNewInventory} />\n          <Route exact path='/inventory/:inventory_id/:store_id' component={UpdateInventoryProduct} />\n        </Switch>\n        <Footer />\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}